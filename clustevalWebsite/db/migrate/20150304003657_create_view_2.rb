class CreateView2 < ActiveRecord::Migration
  def up
  	execute "CREATE ALGORITHM=MERGE VIEW parameter_optimization_iterations_exts_configs AS select iter.id AS run_results_parameter_optimizations_parameter_set_iteration_id,iter.iteration AS iteration,iter.paramSetAsString AS paramSetAsString,measure.id AS clustering_quality_measure_id,qual.quality AS quality,results.uniqueRunIdentifier AS uniqueRunIdentifier,dataconfigs.data_config_id AS data_config_id,programconfigs.program_id AS program_id,progParams.name AS paramName,vals.value AS value from (((((((((((run_results_parameter_optimizations_parameter_set_iterations iter join run_results_parameter_optimizations_parameter_sets sets)  join run_results_parameter_optimizations opts)  join program_configs programconfigs)  join data_configs dataconfigs)  join run_results_executions exec)   join run_results results)   join run_results_parameter_optimizations_qualities qual)  join run_results_parameter_optimizations_parameter_values vals)   join run_results_parameter_optimizations_parameter_set_parameters params)   join program_parameters progParams)   join clustering_quality_measures measure) where ((opts.program_config_id = programconfigs.id) and (opts.data_config_id = dataconfigs.id) and (results.id = exec.run_result_id) and (exec.id = opts.run_results_execution_id) and (opts.id = sets.run_results_parameter_optimization_id) and (sets.id = iter.run_results_parameter_optimizations_parameter_set_id) and (iter.id = qual.run_results_parameter_optimizations_parameter_set_iteration_id) and (measure.id = qual.clustering_quality_measure_id) and (vals.run_results_parameter_optimizations_parameter_set_iteration_id = iter.id) and (vals.run_results_parameter_optimizations_parameter_set_parameter_id = params.id) and (params.program_parameter_id = progParams.id));"
  end

  def down
  end
end
